#!/usr/bin/python
import atexit
import os
import signal
import sys
import uuid

if len(sys.argv) < 2:
    print("Fsev - Run a command when a file change event occurs within the current dir.") 
    print("Usage: %s <command>"  % os.path.basename(__file__))
    exit(1)

path = os.getcwd()
label = str(uuid.uuid4().hex[:8]) 
command = sys.argv[1:]

watcher = """<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN
http://www.apple.com/DTDs/PropertyList-1.0.dtd>
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>%s</string>
    <key>ProgramArguments</key>
    <array>
        <string>/bin/bash</string>
        <string>-c</string>
        <string>cd %s; %s >> /tmp/%s.log</string>
    </array>
    <key>WatchPaths</key>
    <array>
        <string>%s</string>
    </array>
</dict>
</plist>""" % (label, path, " ".join(command), label, path)

os.system("mkdir -p ~/Library/LaunchAgents")
os.system("echo '%s' > ~/Library/LaunchAgents/%s.plist" % (watcher, label))
os.system("touch /tmp/%s.log" % label)
os.system("launchctl load ~/Library/LaunchAgents/%s.plist" % label)
print("loaded %s.plist" % label)

def handle_exit():
    os.system("launchctl unload ~/Library/LaunchAgents/%s.plist" % label)
    os.system("rm -rf ~/Library/LaunchAgents/%s.plist" % label)
    os.system("rm -rf /tmp/%s.log" % label)
    print("unloaded %s.plist" % label)

atexit.register(handle_exit) 
signal.signal(signal.SIGHUP, handle_exit)
os.system("tail -f /tmp/%s.log" % label)

